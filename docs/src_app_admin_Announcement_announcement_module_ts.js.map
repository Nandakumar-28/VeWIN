{"version":3,"file":"src_app_admin_Announcement_announcement_module_ts.js","mappings":"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","sources":["./src/app/admin/Announcement/announcement-add-edit/announcement-add-edit.component.ts","./src/app/admin/Announcement/announcement-add-edit/announcement-add-edit.component.html","./src/app/admin/Announcement/announcement-list/announcement-list.component.ts","./src/app/admin/Announcement/announcement-list/announcement-list.component.html","./src/app/admin/Announcement/announcement-list/dialog-delete.component.ts","./src/app/admin/Announcement/announcement-routing.module.ts","./src/app/admin/Announcement/announcement.module.ts","./src/app/admin/Announcement/services/announcement.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NbToastrService } from '@nebular/theme';\nimport { ROUTE_PATH } from '../../../shared/constants/route-path.constant';\nimport { DatePipe } from '@angular/common';\nimport { AnnouncementService } from '../services/announcement.service';\nimport { HttpStatusCode } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'ngx-announcement-add-edit',\n  templateUrl: './announcement-add-edit.component.html',\n  styleUrls: ['./announcement-add-edit.component.scss']\n})\nexport class AnnouncementAddEditComponent implements OnInit {\n\n  AddAnnouncementForm: FormGroup;\n  submitted = false;\n  //page_title: string;\n  data_loading = false;\n\n  //show password\n  showPassword = true;\n\n  //userlist pass user data\n  announcementDetails: any;\n  page_title: string;\n\n  private subscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private aRoute: ActivatedRoute,\n    private announcementService: AnnouncementService,\n    private toastrService: NbToastrService,\n    private datePipe: DatePipe,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.AddAnnouncementFormInitialize();\n\n    if (this.router.url.indexOf(\"edit\") !== -1) {\n      // this.data_loading = true;\n      const id = this.aRoute.snapshot.paramMap.get(\"title\");\n      this.page_title = \"Edit Announcement\";\n    } else {\n      this.page_title = \"Create Announcement\";\n      this.AddAnnouncementForm.reset();\n    }\n\n\n    // Check if user details are passed user list, service to user-edit\n\n    this.subscription = this.announcementService.getAnnouncementDetails().subscribe(user => {\n      if (user) {\n        this.announcementDetails = user;\n        console.log(this.announcementDetails)\n        // Pre-fill the form with user details\n        this.AddAnnouncementForm.patchValue({\n          title: this.announcementDetails.title,\n          description: this.announcementDetails.description,\n          fdate: new Date(this.announcementDetails.fdate), // Assuming 'fdate' is a date field\n          tdate: new Date(this.announcementDetails.tdate),\n        });\n      } else {\n        this.AddAnnouncementForm.reset(); // Ensure the form is reset when no user details are present\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    // Unsubscribe to prevent multiple subscriptions when leaving the component\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Announcement Form Initialize\n   */\n\n  AddAnnouncementFormInitialize() {\n    this.AddAnnouncementForm = this.formBuilder.group({\n      title: [\"\", [Validators.required, Validators.maxLength(100)]],\n      description: [\"\", [Validators.required, Validators.maxLength(500)]],\n      fdate: [new Date(), [Validators.required]],\n      tdate: [new Date(), [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.AddAnnouncementForm.invalid) {\n      return;\n    }\n\n    const formData = this.AddAnnouncementForm.value;\n    console.log(formData.fdate)\n\n    // Format the date strings before sending them to the server\n    const formattedFromDate = this.datePipe.transform(formData.fdate, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n    const formattedToDate = this.datePipe.transform(formData.tdate, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n\n    // Get the current date and time in the desired format\n    const modifiedDate = this.datePipe.transform(new Date(), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n\n    // Check if the URL contains 'edit' to differentiate between create and edit actions\n    if (this.router.url.indexOf(\"edit\") !== -1) {\n      // For editing, form a request body with put method fields\n      const requestBody = {\n        id: this.announcementDetails.id,\n        title: formData.title,\n        description: formData.description,\n        fdate: formattedFromDate,\n        tdate: formattedToDate,\n        isdeleted: \"string\",\n        createdby: \"Admin\",\n        // createdon: this.userDetails.createdon, // You might want to update these fields\n        modifiedby: \"Admin\",\n        modifiedon: modifiedDate, // Similarly update these fields with appropriate values\n      };\n\n      this.announcementService.updateAnnouncement(requestBody)\n        .subscribe((response) => {\n          // this.backToUserList();\n          if (HttpStatusCode.Ok) {\n            this.toastrService.show(response[\"message\"], \"Success\", {\n              status: \"success\",\n              duration: 8000,\n            });\n          } else {\n            this.toastrService.show(response[\"message\"], \"Warning\", {\n              status: \"warning\",\n              duration: 8000,\n            });\n          }\n          this.router.navigate([ROUTE_PATH.ADMIN, ROUTE_PATH.ANNOUNCEMENT, ROUTE_PATH.ANNOUNCEMENTS.LIST,]);\n        });\n\n\n    } else {\n      // For creating a new announcement\n      const requestBody = {\n        title: formData.title,\n        description: formData.description,\n        fdate: formattedFromDate,\n        tdate: formattedToDate,\n        isdeleted: \"string\",\n        createdby: \"Admin\",\n        createdon: modifiedDate,\n        modifiedby: \"Admin\",\n        modifiedon: modifiedDate,\n      };\n\n      this.announcementService.CreateAnnouncement(requestBody)\n        .subscribe((response) => {\n          if (HttpStatusCode.Ok) {\n            this.toastrService.show(response[\"message\"], \"Success\", {\n              status: \"success\",\n              duration: 8000,\n            });\n          } else {\n            this.toastrService.show(response[\"message\"], \"Warning\", {\n              status: \"warning\",\n              duration: 8000,\n            });\n          }\n          //  this.backToUserList();\n          this.router.navigate([ROUTE_PATH.ADMIN, ROUTE_PATH.ANNOUNCEMENT, ROUTE_PATH.ANNOUNCEMENTS.LIST,]);\n        });\n    }\n  }\n\n\n  /**\n   * Back to Announcement List\n   * @param\n   * @returns\n   */\n  backToAnnouncementList() {\n    this.router.navigate([ROUTE_PATH.ADMIN, ROUTE_PATH.ANNOUNCEMENT, ROUTE_PATH.ANNOUNCEMENTS.LIST,]);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header class=\"text-center bold-text\">{{page_title}}</nb-card-header>\n            <nb-card-body [nbSpinner]=\"data_loading\" nbSpinnerStatus=\"info\">\n\n                <form [formGroup]=\"AddAnnouncementForm\" (ngSubmit)=\"onSubmit()\">\n\n                    <div class=\"form-group row\">\n                        <label for=\"title\" class=\"label col-sm-3 col-form-label\"> Title *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"title\">\n                            <ng-container\n                                *ngIf=\"AddAnnouncementForm.controls.title.touched && AddAnnouncementForm.controls.title.errors\">\n                                <p class=\"caption status-danger\"\n                                    *ngIf=\"AddAnnouncementForm.controls.title.errors.required\">\n                                    title is required</p>\n                            </ng-container>\n                            <ng-container *ngIf=\"AddAnnouncementForm.get('title').hasError('maxlength')\">\n                                <p class=\"caption status-danger\">Title should not exceed 100 characters</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"description\" class=\"label col-sm-3 col-form-label\">Description *</label>\n                        <div class=\"col-sm-9\">\n                            <!-- <input nbInput fullWidth type=\"text\" formControlName=\"description\"> -->\n                            <textarea nbInput fullWidth type=\"text\" formControlName=\"description\"></textarea>\n                            <ng-container\n                                *ngIf=\"AddAnnouncementForm.controls.description.touched && AddAnnouncementForm.controls.description.errors\">\n                                <p class=\"caption status-danger\"\n                                    *ngIf=\"AddAnnouncementForm.controls.description.errors.required\">\n                                    Description is required</p>\n                            </ng-container>\n                            <ng-container *ngIf=\"AddAnnouncementForm.get('description').hasError('maxlength')\">\n                                <p class=\"caption status-danger\">Description should not exceed 500 characters</p>\n                            </ng-container>\n\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"fdate\" class=\"label col-sm-3 col-form-label\">From Date *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth [nbDatepicker]=\"fromDatepicker\" formControlName=\"fdate\">\n                            <nb-datepicker #fromDatepicker></nb-datepicker>\n                            <ng-container\n                                *ngIf=\"AddAnnouncementForm.controls.fdate.touched && AddAnnouncementForm.controls.fdate.errors\">\n                                <p class=\"caption status-danger\"\n                                    *ngIf=\"AddAnnouncementForm.controls.fdate.errors.required\">\n                                    From Date is required </p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"tdate\" class=\"label col-sm-3 col-form-label\">To Date *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth [nbDatepicker]=\"toDatepicker\" formControlName=\"tdate\">\n                            <nb-datepicker #toDatepicker></nb-datepicker>\n                            <ng-container\n                                *ngIf=\"AddAnnouncementForm.controls.tdate.touched && AddAnnouncementForm.controls.tdate.errors\">\n                                <p class=\"caption status-danger\"\n                                    *ngIf=\"AddAnnouncementForm.controls.tdate.errors.required\">\n                                    To Date is required </p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"offset-sm-3 col-sm-9\">\n                            <button type=\"submit\" nbButton status=\"primary\"\n                                [disabled]=\"submitted || !AddAnnouncementForm.valid\">Submit</button>\n                            &nbsp;&nbsp;\n                            <button nbButton status=\"danger\" (click)=\"backToAnnouncementList()\"\n                                routerLinkActive=\"router-link-active\"><b>\n                                    Cancel\n                                </b></button>\n                        </div>\n                    </div>\n                </form>\n\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NbDialogService, NbToastrService } from '@nebular/theme';\nimport { ConfirmationService } from 'primeng/api';\nimport { AnnouncementService } from '../services/announcement.service';\nimport { ROUTE_PATH } from '../../../shared/constants/route-path.constant';\nimport { DialogDeleteComponent } from './dialog-delete.component';\nimport { HttpStatusCode } from '@angular/common/http';\n\n@Component({\n  selector: 'ngx-announcement-list',\n  templateUrl: './announcement-list.component.html',\n  styleUrls: ['./announcement-list.component.scss']\n})\nexport class AnnouncementListComponent implements OnInit {\n\n  itemsPerPage: any[] = [10, 25, 50];\n  announcements: any;\n  columns: any[]; // for table columns\n\n  first = 0;\n  rows = 10;\n\n  constructor(\n    private dialogConfirmService: ConfirmationService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private aRoute: ActivatedRoute,\n    private announcementService: AnnouncementService,\n    private dialogService: NbDialogService\n  ) { }\n\n  ngOnInit() {\n    // table   with their respective field name and header value\n    this.columns = [\n      { field: \"title\", header: \"Title\", show: true, sort: true },\n      { field: \"description\", header: \"Description\", show: true, sort: true },\n      { field: \"fdate\", header: \"From Date\", show: true, sort: true },\n      { field: \"tdate\", header: \"To Date\", show: true, sort: true },\n    ];\n\n    this.userList();\n  }\n  /**\n * create Announcement\n * @param null\n * @returns\n */\n  createAnnouncement() {\n\n    this.announcementService.setAnnouncementDetails(null);\n    this.router.navigate([\n      ROUTE_PATH.ADMIN,\n      ROUTE_PATH.ANNOUNCEMENT,\n      ROUTE_PATH.ANNOUNCEMENTS.CREATE,\n    ]);\n  }\n\n  /**\n   * Edit announcement\n   * @param user\n   * @returns\n   */\n  editAnnouncement(user: any) {\n    this.announcementService.setAnnouncementDetails(user); // Pass the selected user details to the service\n    this.router.navigate([\n      ROUTE_PATH.ADMIN,\n      ROUTE_PATH.ANNOUNCEMENT,\n      ROUTE_PATH.ANNOUNCEMENTS.EDIT,\n      user.id\n    ]);\n  }\n\n  /**\n   * Delete Announcement confirmation\n   * @param user\n   * @returns\n   */\n  confirmDelete(user: any) {\n    this.dialogService.open(DialogDeleteComponent, {\n      context: { user },\n    }).onClose.subscribe((result) => {\n      if (result) {\n        this.deleteAnnouncement(user.id);\n        console.log(user)\n      }\n    });\n  }\n\n  /**\n   * Delete Announcement\n   * @param userId\n   * @returns\n   */\n  deleteAnnouncement(id) {\n    // let deletePostData = { userId: userId };\n\n    this.announcementService.deleteAnnouncement(id).subscribe(\n      (response) => {\n        this.userList();\n        if (HttpStatusCode.Ok) {\n          this.toastrService.show(response[\"message\"], \"Success\", {\n            status: \"success\",\n            duration: 8000,\n          });\n        } else {\n          this.toastrService.show(response[\"message\"], \"Warning\", {\n            status: \"warning\",\n            duration: 8000,\n          });\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  /**\n   * Announcement List\n   * @param null\n   * @returns\n   */\n\n  // Define your static user data\n  staticUsers: any[] = [\n    { title: 'Vewin', description: 'Apps' },\n    { title: 'Google', description: 'Daily News' },\n    { title: 'Instagram', description: 'Online Application' },\n  ];\n\n  userList() {\n\n    //this.users  =this.staticUsers;\n    this.announcementService.getannouncementList().subscribe(\n      (response) => {\n        this.announcements = response;\n        // if (HttpStatusCode.Ok) {\n        //   this.toastrService.show(response[\"message\"], \"Success\", {\n        //     status: \"success\",\n        //     duration: 8000,\n        //   });\n        // } else {\n        //   this.toastrService.show(response[\"message\"], \"Warning\", {\n        //     status: \"warning\",\n        //     duration: 8000,\n        //   });\n        // }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n\n}\n\n","<nb-card class=\"inline-form-card full-card\">\n\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <nb-card-header>\n        <div class=\"row\">\n            <div class=\"col-md-9 text-center bold-text\">Announcement List</div>\n            <div class=\"col-md-3\">\n                <button class=\"btn btn-sm btn-success\" (click)=\"createAnnouncement()\">Create Announcement</button>\n            </div>\n        </div>\n    </nb-card-header>\n\n    <nb-card-body>\n\n        <div class=\"card\">\n            <p-table [value]=\"announcements\" [paginator]=\"true\" [rows]=\"rows\" [showCurrentPageReport]=\"true\"\n                [autoLayout]=\"true\" [rowsPerPageOptions]=\"itemsPerPage\"[scrollable]=\"true\" [scrollHeight]=\"'autoLayout'\">\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <ng-container *ngFor=\"let col of columns\">\n                            <th *ngIf=\"col.show\" [pSortableColumn]=\"(col.sort==true)? col.field:false\"\n                                [class]=\"col.field+'-campaigns'\" class=\"text-center\">\n                                <p-sortIcon *ngIf=\"col.sort==true\" [field]=\"col.field\" class=\"sort-icon\"\n                                    [id]=\"col.field+'-sort'\">\n                                </p-sortIcon>\n                                <span>{{col.header}}</span>\n                            </th>\n                        </ng-container>\n                        <th class=\"text-center\">Actions</th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-user>\n                    <tr>\n                        <td class=\"text-center\" style=\"width: 25%\">{{user.title}}</td>\n                        <td class=\"text-center\" style=\"width: 35%;\">{{user.description}}</td>\n                        <td class=\"text-center\">{{ user.fdate | date: 'dd/MM/yyyy' }}</td>\n                        <td class=\"text-center\">{{ user.tdate | date: 'dd/MM/yyyy' }}</td>\n                        <!-- <td>{{user.active == true ? 'Active' : 'InActive'}}</td> -->\n                        <td class=\"text-center action\">\n                            <button (click)=\"editAnnouncement(user)\" routerLinkActive=\"router-link-active\"\n                                nbTooltip=\"Edit\" nbTooltipPlacement=\"top\"\n                                class=\"btn btn-outline-primary btn-sm action-button\">\n                                <nb-icon icon=\"edit\" pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;\n                            <button nbTooltip=\"Delete\" (click)=\"confirmDelete(user)\" nbTooltipPlacement=\"top\"\n                                class=\"btn btn-outline-danger btn-sm action-button\">\n                                <nb-icon icon=\"close\" pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n\n    </nb-card-body>\n</nb-card>","import { Component, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n\n@Component({\n  selector: 'ngx-dialog-delete',\n  template:\n`   <nb-card>\n      <nb-card-header class=\"text-center\">\n        <b>Delete Confirmation</b>\n      </nb-card-header>\n      <nb-card-body>\n        <p>Are you sure that you want to delete this <b>{{ user.name }}</b>?</p>\n        <ul>\n          <li><strong>Title:</strong> {{ user.title }}</li>\n          <li><strong>Description:</strong> {{ user.description }}</li>\n          <li><strong>From Date:</strong> {{ user.fdate | date: 'dd/MM/yyyy' }}</li>\n          <li><strong>To Date:</strong> {{ user.tdate | date: 'dd/MM/yyyy'  }}</li>\n        </ul>\n      </nb-card-body>\n      <nb-card-footer class=\"text-center\">\n        <button nbButton status=\"success\" (click)=\"deleteUser()\">Delete</button>&nbsp;&nbsp;&nbsp;\n        <button nbButton status=\"primary\" (click)=\"close()\">Cancel</button>\n      </nb-card-footer>\n    </nb-card>,\n`})\nexport class DialogDeleteComponent implements OnInit {\n\n  user: any;\n\n  constructor(protected dialogRef: NbDialogRef<DialogDeleteComponent>) { }\n\n  ngOnInit(): void { }\n\n  close() {\n    this.dialogRef.close(false); // Close the delete dialog without approving\n  }\n\n  deleteUser() {\n    this.dialogRef.close(this.user); // Close the delete dialog and trigger the approval action\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AnnouncementListComponent } from './announcement-list/announcement-list.component';\nimport { AnnouncementAddEditComponent } from './announcement-add-edit/announcement-add-edit.component';\n\nconst routes: Routes = [\n   {\n    path: 'list',\n    component: AnnouncementListComponent,\n  },\n  {\n    path: 'create',\n    component: AnnouncementAddEditComponent,\n  },\n  {\n    path: 'edit/:id',\n    component: AnnouncementAddEditComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'list', // Default route\n    component: AnnouncementListComponent,\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AnnouncementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  NbActionsModule,\n  NbAlertModule,\n  NbCalendarKitModule,\n  NbCalendarModule,\n  NbCalendarRangeModule,\n  NbFormFieldModule,\n  NbProgressBarModule,\n  NbSpinnerModule,\n  NbTooltipModule,\n  NbCheckboxModule,\n  NbButtonModule,\n  NbAccordionModule,\n  NbCardModule,\n  NbDialogModule,\n  NbListModule,\n  NbRouteTabsetModule,\n  NbStepperModule,\n  NbTabsetModule,\n  NbUserModule,\n  NbIconModule,\n  NbInputModule,\n  NbTreeGridModule,\n  NbSelectModule,\n  NbToggleModule, \n  NbContextMenuModule,\n  NbDatepickerModule,\n} from '@nebular/theme';\n\nimport { ThemeModule } from '../../@theme/theme.module';\n\n// Interceptor\nimport { NbAuthJWTInterceptor, HttpErrorInterceptor } from '../../auth/interceptor/jwt-interceptor';\n\n// Primeng\nimport { TableModule } from 'primeng/table';\nimport {ButtonModule} from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\n\n\n\nimport { AnnouncementAddEditComponent } from './announcement-add-edit/announcement-add-edit.component';\nimport { AnnouncementListComponent } from './announcement-list/announcement-list.component';\nimport { DialogDeleteComponent } from './announcement-list/dialog-delete.component';\nimport { AnnouncementRoutingModule } from './announcement-routing.module';\n\n\n\n@NgModule({\n  declarations: [AnnouncementAddEditComponent,AnnouncementListComponent,DialogDeleteComponent],\n  imports: [\n    CommonModule,\n    AnnouncementRoutingModule,\n    HttpClientModule,\n    NbActionsModule,\n    NbAlertModule,\n    NbCalendarKitModule,\n    NbCalendarModule,\n    NbCalendarRangeModule,\n    NbDatepickerModule.forRoot(),\n    NbFormFieldModule,\n    NbProgressBarModule,\n    NbSpinnerModule,\n    NbTooltipModule,\n    NbCheckboxModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ThemeModule,\n    NbTabsetModule,\n    NbRouteTabsetModule,\n    NbStepperModule,\n    NbCardModule,\n    NbButtonModule,\n    NbListModule,\n    NbAccordionModule,\n    NbUserModule,\n    NbIconModule,\n    NbInputModule,\n    NbTreeGridModule,\n    NbSelectModule,\n    NbToggleModule,\n    NbContextMenuModule,\n    NbDialogModule.forRoot(),\n    TableModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    DialogModule,\n  ],\n  providers: [\n    ConfirmationService, \n    { provide: HTTP_INTERCEPTORS, useClass: NbAuthJWTInterceptor, multi: true }, \n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\n  ],\n})\nexport class AnnouncementModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NbAuthJWTToken, NbAuthService } from '@nebular/auth';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { API_END_POINTS, getApiEndPoint } from '../../../shared/constants/api-constant';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnnouncementService {\n  announcement = {};\n\n  constructor(\n    private announcementServicehttp: HttpClient,\n    private authService: NbAuthService\n  ) {\n    this.authService.onTokenChange().subscribe((token: NbAuthJWTToken) => {\n      if (token.isValid()) {\n        this.announcement = token.getPayload(); // here we receive a payload from the token and assigns it to our `announcement` variable\n      }\n    });\n  }\n\n  //pass select Announcement Details in Announcement-Edit\n\n  private announcementDetails = new BehaviorSubject<any>(null);\n\n  setAnnouncementDetails(user: any) {\n    this.announcementDetails.next(user);\n  }\n\n  getAnnouncementDetails() {\n    return this.announcementDetails.asObservable();\n  }\n\n  /**\n   * Announcement List\n   * @returns\n   */\n  getannouncementList(): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.ANNOUNCEMENT.LIST);\n    return this.announcementServicehttp.get(apiURL).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Delete Announcement\n   * @param id\n   * @returns\n   *\n   */\n  deleteAnnouncement(id: number): Observable<any> {\n    let apiURL = getApiEndPoint(`${API_END_POINTS.ANNOUNCEMENT.DELETE}?id=${id}`);\n    return this.announcementServicehttp.put(apiURL, null).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n\n  /**\n   * Update Announcement details\n   * @param requestBody\n   * @returns\n   *\n   */\n  updateAnnouncement(requestBody): Observable<any> {\n    let apiURL = getApiEndPoint(`${API_END_POINTS.ANNOUNCEMENT.UPDATE}`);\n    return this.announcementServicehttp.put(apiURL, requestBody).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n\n\n  /**\n   * Create Announcement\n   * @param requestBody\n   * @returns\n   *\n   */\n\n  CreateAnnouncement(requestBody): Observable<any> {\n    let apiURL = getApiEndPoint(`${API_END_POINTS.ANNOUNCEMENT.ADD}`);\n    console.log(requestBody)\n    return this.announcementServicehttp.post(apiURL, requestBody).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}