{"version":3,"file":"src_app_admin_register-approval_register-approval_module_ts.js","mappings":";;;;;;;;;;;;;;;;AAEuD;AACyB;;;AAIhF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,yFAAqB;KACjC;IACD,IAAI;IACJ,oBAAoB;IACpB,qCAAqC;IACrC,KAAK;IACL,IAAI;IACJ,sBAAsB;IACtB,qCAAqC;IACrC,KAAK;IACL;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,yFAAqB;KACjC;CAEF,CAAC;AAMK,MAAM,6BAA6B;;0GAA7B,6BAA6B;0HAA7B,6BAA6B;8HAH9B,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC/B,yDAAY;mIAEX,6BAA6B,oFAF9B,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BuB;AAC4B;AACT;AA2B1C;AAEgC;AAExD,cAAc;AACsF;AAEpG,UAAU;AACkC;AACA;AACE;AACc;AACV;AAG8B;AACI;AACA;AACD;;;AAmD5E,MAAM,sBAAsB;;4FAAtB,sBAAsB;mHAAtB,sBAAsB;wHANtB;QACT,4DAAmB;QACnB,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,mFAAoB,EAAE,KAAK,EAAE,IAAI,EAAE;QAC3E,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,mFAAoB,EAAE,KAAK,EAAE,IAAI,EAAE;KAC5E,YAzCQ;YACP,yDAAY;YACZ,kEAAgB;YAChB,4DAAe;YACf,0DAAa;YACb,gEAAmB;YACnB,6DAAgB;YAChB,kEAAqB;YACrB,8DAAiB;YACjB,gEAAmB;YACnB,4DAAe;YACf,4DAAe;YACf,6DAAgB;YAChB,wDAAW;YACX,gEAAmB;YACnB,4DAAW;YACX,2DAAc;YACd,gEAAmB;YACnB,4DAAe;YACf,yDAAY;YACZ,2DAAc;YACd,yDAAY;YACZ,8DAAiB;YACjB,yDAAY;YACZ,yDAAY;YACZ,0DAAa;YACb,6DAAgB;YAChB,2DAAc;YACd,2DAAc;YACd,gEAAmB;YACnB,mEAAsB,EAAE;YACxB,uDAAW;YACX,yDAAY;YACZ,uEAAmB;YACnB,yDAAY;YACZ,4FAA6B;SAC9B;mIAOU,sBAAsB,mBA/C/B,yFAAqB;QACrB,6FAAuB;QACvB,6FAAuB,aAGvB,yDAAY;QACZ,kEAAgB;QAChB,4DAAe;QACf,0DAAa;QACb,gEAAmB;QACnB,6DAAgB;QAChB,kEAAqB;QACrB,8DAAiB;QACjB,gEAAmB;QACnB,4DAAe;QACf,4DAAe;QACf,6DAAgB;QAChB,wDAAW;QACX,gEAAmB;QACnB,4DAAW;QACX,2DAAc;QACd,gEAAmB;QACnB,4DAAe;QACf,yDAAY;QACZ,2DAAc;QACd,yDAAY;QACZ,8DAAiB;QACjB,yDAAY;QACZ,yDAAY;QACZ,0DAAa;QACb,6DAAgB;QAChB,2DAAc;QACd,2DAAc;QACd,gEAAmB,+DAEnB,uDAAW;QACX,yDAAY;QACZ,uEAAmB;QACnB,yDAAY;QACZ,4FAA6B;;;;;;;;;;;;;;;;;;;AC7D1B,MAAM,uBAAuB;IAGlC,YAAsB,SAA+C;QAA/C,cAAS,GAAT,SAAS,CAAsC;IAAI,CAAC;IAE1E,QAAQ,KAAW,CAAC;IAEpB,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,8CAA8C;IAC7E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,4DAA4D;IAC1F,CAAC;;8FAbU,uBAAuB;qHAAvB,uBAAuB;QAxBhC,0EAAS;QAEF,gFAAqB;QAAA,4DAAI;QAE9B,+EAAc;QACW,sGAA2C;QAAA,oEAAG;QAAA,uDAAe;QAAA,4DAAI;QAAA,4DAAC;QAAA,4DAAI;QAC7F,sEAAI;QACU,iEAAK;QAAA,4DAAS;QAAC,wDAAe;QAAA,4DAAK;QAC/C,sEAAI;QAAQ,0EAAc;QAAA,4DAAS;QAAC,wDAAiB;QAAA,4DAAK;QAC1D,sEAAI;QAAQ,mEAAO;QAAA,4DAAS;QAAC,wDAAgB;QAAA,4DAAK;QAClD,sEAAI;QAAQ,oEAAQ;QAAA,4DAAS;QAAC,wDAAkB;QAAA,4DAAK;QACrD,sEAAI;QAAQ,qEAAS;QAAA,4DAAS;QAAC,wDAAkB;QAAA,4DAAK;QACtD,sEAAI;QAAQ,qEAAS;QAAA,4DAAS;QAAC,wDAAmB;QAAA,4DAAK;QACvD,sEAAI;QAAQ,sEAAU;QAAA,4DAAS;QAAC,wDAAmB;QAAA,4DAAK;QACxD,sEAAI;QAAQ,mEAAO;QAAA,4DAAS;QAAC,wDAAyC;QAAA,4DAAK;QAG/E,qFAAoC;QACA,gJAAS,iBAAa,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAAA,+EAC1E;QAAA,6EAAoD;QAAlB,gJAAS,WAAO,IAAC;QAAC,kEAAM;QAAA,4DAAS;;QAdE,0DAAe;QAAf,8EAAe;QAEvD,0DAAe;QAAf,wFAAe;QACN,0DAAiB;QAAjB,0FAAiB;QACxB,0DAAgB;QAAhB,yFAAgB;QACf,0DAAkB;QAAlB,2FAAkB;QACjB,0DAAkB;QAAlB,2FAAkB;QAClB,0DAAmB;QAAnB,4FAAmB;QAClB,0DAAmB;QAAnB,4FAAmB;QACtB,0DAAyC;QAAzC,kHAAyC;;;;;;;;;;;;;;;;;;;;ACUzE,MAAM,uBAAuB;IAIlC,YAAsB,SAA+C;QAA/C,cAAS,GAAT,SAAS,CAAsC;IAAG,CAAC;IAEzE,QAAQ,KAAU,CAAC;IAEnB,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,6CAA6C;IAC5E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,2DAA2D;IACzF,CAAC;;8FAdU,uBAAuB;qHAAvB,uBAAuB;QAxBhC,0EAAS;QAEF,gFAAqB;QAAA,4DAAI;QAE9B,+EAAc;QACW,uGAA4C;QAAA,oEAAG;QAAA,uDAAe;QAAA,4DAAI;QAAA,4DAAC;QAAA,4DAAI;QAC9F,sEAAI;QACU,iEAAK;QAAA,4DAAS;QAAC,wDAAe;QAAA,4DAAK;QAC/C,sEAAI;QAAQ,0EAAc;QAAA,4DAAS;QAAC,wDAAiB;QAAA,4DAAK;QAC1D,sEAAI;QAAQ,mEAAO;QAAA,4DAAS;QAAC,wDAAgB;QAAA,4DAAK;QAClD,sEAAI;QAAQ,oEAAQ;QAAA,4DAAS;QAAC,wDAAkB;QAAA,4DAAK;QACrD,sEAAI;QAAQ,qEAAS;QAAA,4DAAS;QAAC,wDAAkB;QAAA,4DAAK;QACtD,sEAAI;QAAQ,qEAAS;QAAA,4DAAS;QAAC,wDAAmB;QAAA,4DAAK;QACvD,sEAAI;QAAQ,sEAAU;QAAA,4DAAS;QAAC,wDAAmB;QAAA,4DAAK;QACxD,sEAAI;QAAQ,mEAAO;QAAA,4DAAS;QAAC,wDAAyC;QAAA,4DAAK;QAG/E,qFAAoC;QACA,gJAAS,iBAAa,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAAA,+EAC3E;QAAA,6EAAoD;QAAlB,gJAAS,WAAO,IAAC;QAAC,kEAAM;QAAA,4DAAS;;QAdG,0DAAe;QAAf,8EAAe;QAExD,0DAAe;QAAf,wFAAe;QACN,0DAAiB;QAAjB,0FAAiB;QACxB,0DAAgB;QAAhB,yFAAgB;QACf,0DAAkB;QAAlB,2FAAkB;QACjB,0DAAkB;QAAlB,2FAAkB;QAClB,0DAAmB;QAAnB,4FAAmB;QAClB,0DAAmB;QAAnB,4FAAmB;QACtB,0DAAyC;QAAzC,kHAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;ACfV;AACA;;;;;;;;;;ICgBtC,4EAEa;;;IAFsB,+EAAmB;;;IAF1D,yEACyD;IACrD,kKAEa;IACb,uEAAM;IAAA,uDAAc;IAAA,4DAAO;;;IAJ3B,qFAAgC;IADf,uHAAqD;IAEzD,0DAAoB;IAApB,qFAAoB;IAG3B,0DAAc;IAAd,8EAAc;;;IAN5B,wEAA0C;IACtC,4IAMK;IACT,qEAAe;;;IAPN,0DAAc;IAAd,6EAAc;;;IAF3B,qEAAI;IACA,iJAQe;IACf,wEAAwB;IAAA,kEAAO;IAAA,4DAAK;;;IATN,0DAAU;IAAV,mFAAU;;;;IAa5C,qEAAI;IACwB,uDAAa;IAAA,4DAAK;IAC1C,yEAA4C;IAAA,uDAAe;IAAA,4DAAK;IAChE,wEAAwB;IAAA,uDAAc;IAAA,4DAAK;IAC3C,wEAAwB;IAAA,uDAAgB;IAAA,4DAAK;IAC7C,wEAAwB;IAAA,wDAAe;IAAA,4DAAK;IAE5C,0EAA+B;IACnB,yWAAS,4BAAkB,IAAC;IAGhC,0EAAqF;IACzF,4DAAS;IAAA,yEACT;IAAA,8EAEwD;IAFhD,0WAAS,6BAAkB,IAAC;IAGhC,0EAA+E;IACnF,4DAAS;;;IAhBW,0DAAa;IAAb,6EAAa;IACO,0DAAe;IAAf,+EAAe;IACnC,0DAAc;IAAd,8EAAc;IACd,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAe;IAAf,+EAAe;;;ADtBxD,MAAM,qBAAqB;IAShC,YACU,aAAkC,EAClC,aAA8B,EAC9B,MAAc,EACd,MAAsB,EACtB,WAA4B,EAC5B,oBAAqC,EACrC,QAAkB;QANlB,kBAAa,GAAb,aAAa,CAAqB;QAClC,kBAAa,GAAb,aAAa,CAAiB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAiB;QAC5B,yBAAoB,GAApB,oBAAoB,CAAiB;QACrC,aAAQ,GAAR,QAAQ,CAAU;QAd5B,iBAAY,GAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAIxC,UAAK,GAAG,CAAC,CAAC;QACV,SAAI,GAAG,EAAE,CAAC;IAUN,CAAC;IAEL,QAAQ;QACN,4DAA4D;QAC5D,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YACzD,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YACnE,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YAC5D,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YAC/D,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;SAC9D,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,IAAS;QACpB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,+EAAuB,EAAE;YACtD,OAAO,EAAE,EAAE,IAAI,EAAE;SAClB,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,IAAS;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,8BAA8B,CAAC,CAAC;QAEzF,MAAM,YAAY,GAAG;YACnB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,MAAM,EAAE,QAAQ;YAChB,UAAU,EAAE,OAAO;YACnB,UAAU,EAAE,YAAY;SACzB;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,SAAS,CAClD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,eAAmB;gBACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE;oBACtD,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;iBAAM,EAKN;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAGD;;;;OAIG;IACH,YAAY,CAAC,IAAS;QACpB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,+EAAuB,EAAE;YACtD,OAAO,EAAE,EAAE,IAAI,EAAE;SAClB,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,IAAS;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,8BAA8B,CAAC,CAAC;QAEzF,MAAM,YAAY,GAAG;YACnB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,MAAM,EAAE,SAAS;YACjB,UAAU,EAAE,OAAO;YACnB,UAAU,EAAE,YAAY;SACzB;QAED,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,CACnD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,eAAmB;gBACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE;oBACtD,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;iBAAM,EAKN;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAGD;;;;OAIG;IACH,+BAA+B;IAC/B,0BAA0B;IAC1B,kHAAkH;IAClH,uHAAuH;IACvH,mHAAmH;IACnH,4GAA4G;IAC5G,4GAA4G;IAC5G,gHAAgH;IAChH,2GAA2G;IAC3G,gHAAgH;IAChH,6GAA6G;IAC7G,6GAA6G;IAC7G,4GAA4G;IAC5G,6GAA6G;IAC7G,iHAAiH;IACjH,sHAAsH;IACtH,iHAAiH;IACjH,4GAA4G;IAC5G,iHAAiH;IACjH,+GAA+G;IAC/G,4GAA4G;IAC5G,4GAA4G;IAC5G,iHAAiH;IACjH,gHAAgH;IAChH,wGAAwG;IACxG,iHAAiH;IACjH,oHAAoH;IACpH,6GAA6G;IAC7G,wGAAwG;IACxG,uHAAuH;IACvH,+GAA+G;IAC/G,0GAA0G;IAE1G,MAAM;IAEN,QAAQ;QAEN,gCAAgC;QAEhC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CACtC,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACtB,2BAA2B;YAC3B,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,WAAW;YACX,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,GAAG;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;0FA7LU,qBAAqB;mHAArB,qBAAqB;QCflC,6EAA4C;QAExC,6EAA6D;QAC7D,iFAAgB;QAEqC,6EAAkB;QAAA,4DAAM;QAO7E,+EAAc;QAKF,iIAac;QACd,oIAsBc;QAClB,4DAAU;;QApDD,0DAAyB;QAAzB,+HAAyB;QAazB,0DAAe;QAAf,4EAAe;;;;;;;;;;;;;;;;;;;;;;;ACXpC,OAAO;AAC4D;AACxB;AAE3C,WAAW;AAC6E;;;;AAMjF,MAAM,eAAe;IAI1B,YACU,eAA2B,EAC3B,WAA0B;QAD1B,oBAAe,GAAf,eAAe,CAAY;QAC3B,gBAAW,GAAX,WAAW,CAAe;QAJpC,SAAI,GAAG,EAAE,CAAC;QAMR,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,KAAqB,EAAE,EAAE;YACnE,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;gBACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,iFAAiF;aAClH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,WAAW;QACT,IAAI,MAAM,GAAG,8EAAc,CAAC,oFAAwB,CAAC,CAAC;QACtD,MAAM,aAAa,GAAG,GAAG,MAAM,kBAAkB,CAAC;QAClD,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CACjD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,WAAW,CAAC,YAAY;QAEtB,IAAI,MAAM,GAAG,8EAAc,CAAC,wFAA4B,CAAC;QACzD,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,IAAI,CACxD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAID;;;;;OAKG;IAGH,YAAY,CAAC,YAAY;QACvB,IAAI,MAAM,GAAG,8EAAc,CAAC,wFAA4B,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,IAAI,CACxD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,UAAU,CAAC,UAAU;QACnB,IAAI,MAAM,GAAG,8EAAc,CAAC,sFAA0B,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,IAAI,CACzD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,cAAc,CAAC,QAAQ;QACrB,IAAI,MAAM,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,8EAAc,CAAC,sFAA0B,CAAC,CAAC,CAAC,CAAC,8EAAc,CAAC,sFAA0B,CAAC,CAAC;QAC/H,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI,CACrD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;8EA/GU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM","sources":["./src/app/admin/register-approval/register-approval-routing.module.ts","./src/app/admin/register-approval/register-approval.module.ts","./src/app/admin/register-approval/register-list/dialog-approval.component.ts","./src/app/admin/register-approval/register-list/dialog-declined.component.ts","./src/app/admin/register-approval/register-list/register-list.component.ts","./src/app/admin/register-approval/register-list/register-list.component.html","./src/app/admin/register-approval/services/register.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterListComponent } from './register-list/register-list.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: 'list',\n    component: RegisterListComponent,\n  },\n  // {\n  //   path: 'create',\n  //   component: UserAddEditComponent,\n  // },\n  // {\n  //   path: 'edit/:id',\n  //   component: UserAddEditComponent,\n  // },\n  {\n    path: '',\n    redirectTo: 'list', // Default route   \n    component: RegisterListComponent,\n  }\n  \n];\n\n@NgModule({\n   imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterApprovalRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  NbActionsModule,\n  NbAlertModule,\n  NbCalendarKitModule,\n  NbCalendarModule,\n  NbCalendarRangeModule,\n  NbFormFieldModule,\n  NbProgressBarModule,\n  NbSpinnerModule,\n  NbTooltipModule,\n  NbCheckboxModule,\n  NbButtonModule,\n  NbAccordionModule,\n  NbCardModule,\n  NbDialogModule,\n  NbListModule,\n  NbRouteTabsetModule,\n  NbStepperModule,\n  NbTabsetModule,\n  NbUserModule,\n  NbIconModule,\n  NbInputModule,\n  NbTreeGridModule,\n  NbSelectModule,\n  NbToggleModule, \n  NbContextMenuModule,\n} from '@nebular/theme';\n\nimport { ThemeModule } from '../../@theme/theme.module';\n\n// Interceptor\nimport { NbAuthJWTInterceptor, HttpErrorInterceptor } from '../../auth/interceptor/jwt-interceptor';\n\n// Primeng\nimport { TableModule } from 'primeng/table';\nimport {ButtonModule} from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\n\n\nimport { RegisterListComponent } from './register-list/register-list.component';\nimport { DialogApprovalComponent } from './register-list/dialog-approval.component';\nimport { DialogDeclinedComponent } from './register-list/dialog-declined.component';\nimport { RegisterApprovalRoutingModule } from './register-approval-routing.module';\n\n@NgModule({\n  declarations: [\n    RegisterListComponent,\n    DialogApprovalComponent,\n    DialogDeclinedComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    NbActionsModule,\n    NbAlertModule,\n    NbCalendarKitModule,\n    NbCalendarModule,\n    NbCalendarRangeModule,\n    NbFormFieldModule,\n    NbProgressBarModule,\n    NbSpinnerModule,\n    NbTooltipModule,\n    NbCheckboxModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ThemeModule,\n    NbTabsetModule,\n    NbRouteTabsetModule,\n    NbStepperModule,\n    NbCardModule,\n    NbButtonModule,\n    NbListModule,\n    NbAccordionModule,\n    NbUserModule,\n    NbIconModule,\n    NbInputModule,\n    NbTreeGridModule,\n    NbSelectModule,\n    NbToggleModule,\n    NbContextMenuModule,\n    NbDialogModule.forRoot(),\n    TableModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    DialogModule,\n    RegisterApprovalRoutingModule\n  ],\n  providers: [\n    ConfirmationService, \n    { provide: HTTP_INTERCEPTORS, useClass: NbAuthJWTInterceptor, multi: true }, \n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\n  ],\n})\nexport class RegisterApprovalModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-dialog-approval',\n  template:\n  ` <nb-card>\n      <nb-card-header class=\"text-center\">\n        <b>Approval Confirmation</b>\n      </nb-card-header>\n      <nb-card-body>\n        <p class=\"text-center\">Are you sure that you want to approve this <b>{{ user.name }}</b>?</p>\n        <ul>\n          <li><strong>Name:</strong> {{ user.name }}</li>\n          <li><strong>Mobile Number:</strong> {{ user.mobile }}</li>\n          <li><strong>E-mail:</strong> {{ user.email }}</li>\n          <li><strong>Address:</strong> {{ user.address }}</li>\n          <li><strong>Pin Code:</strong> {{ user.pincode }}</li>\n          <li><strong>Password:</strong> {{ user.password }}</li>\n          <li><strong>User Type:</strong> {{ user.usertype }}</li>\n          <li><strong>Status:</strong> {{ user.active ? 'Active' : 'Inactive' }}</li>\n        </ul>\n      </nb-card-body>\n      <nb-card-footer class=\"text-center\">\n        <button nbButton status=\"success\" (click)=\"approveUser()\">Approve</button>&nbsp;&nbsp;&nbsp;\n        <button nbButton status=\"primary\" (click)=\"close()\">Cancel</button>\n      </nb-card-footer>\n    </nb-card>\n  `,\n})\nexport class DialogApprovalComponent implements OnInit {\n  user: any;\n\n  constructor(protected dialogRef: NbDialogRef<DialogApprovalComponent>) { }\n\n  ngOnInit(): void { }\n\n  close() {\n    this.dialogRef.close(false); // Close the approval dialog without approving\n  }\n\n  approveUser() {\n    this.dialogRef.close(true); // Close the approval dialog and trigger the approval action\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-dialog-declined',\n  template:\n  ` <nb-card>\n      <nb-card-header class=\"text-center\">\n        <b>Declined Confirmation</b>\n      </nb-card-header>\n      <nb-card-body>\n        <p class=\"text-center\">Are you sure that you want to declined this <b>{{ user.name }}</b>?</p>\n        <ul>\n          <li><strong>Name:</strong> {{ user.name }}</li>\n          <li><strong>Mobile Number:</strong> {{ user.mobile }}</li>\n          <li><strong>E-mail:</strong> {{ user.email }}</li>\n          <li><strong>Address:</strong> {{ user.address }}</li>\n          <li><strong>Pin Code:</strong> {{ user.pincode }}</li>\n          <li><strong>Password:</strong> {{ user.password }}</li>\n          <li><strong>User Type:</strong> {{ user.usertype }}</li>\n          <li><strong>Status:</strong> {{ user.active ? 'Active' : 'Inactive' }}</li>\n        </ul>\n      </nb-card-body>\n      <nb-card-footer class=\"text-center\">\n        <button nbButton status=\"success\" (click)=\"declineUser()\">Declined</button>&nbsp;&nbsp;&nbsp;\n        <button nbButton status=\"primary\" (click)=\"close()\">Cancel</button>\n      </nb-card-footer>\n    </nb-card>\n  `,\n})\nexport class DialogDeclinedComponent implements OnInit {\n\n  user: any;\n\n  constructor(protected dialogRef: NbDialogRef<DialogDeclinedComponent>) {}\n\n  ngOnInit(): void {}\n\n  close() {\n    this.dialogRef.close(false); // Close the decline dialog without approving\n  }\n\n  declineUser() {\n    this.dialogRef.close(true); // Close the decline dialog and trigger the approval action\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NbDialogService, NbToastrService } from '@nebular/theme';\nimport { ConfirmationService } from 'primeng/api';\nimport { RegisterService } from '../services/register.service';\nimport { DialogDeclinedComponent } from './dialog-declined.component';\nimport { DialogApprovalComponent } from './dialog-approval.component';\nimport { HttpStatusCode } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'ngx-register-list',\n  templateUrl: './register-list.component.html',\n  styleUrls: ['./register-list.component.scss']\n})\nexport class RegisterListComponent implements OnInit {\n\n  itemsPerPage: any[] = [10, 25, 50, 100];\n  users: any;\n  columns: any[]; // for table columns\n\n  first = 0;\n  rows = 10;\n\n  constructor(\n    private dialogService: ConfirmationService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private aRoute: ActivatedRoute,\n    private userService: RegisterService,\n    private dialogConfirmService: NbDialogService,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit() {\n    // table   with their respective field name and header value\n    this.columns = [\n      { field: \"name\", header: \"Name\", show: true, sort: true },\n      { field: \"mobile\", header: \"Phone Number\", show: true, sort: true },\n      { field: \"email\", header: \"E-mail\", show: true, sort: true },\n      { field: \"address\", header: \"Address\", show: true, sort: true },\n      { field: \"status\", header: \"Status\", show: true, sort: true },\n    ];\n\n    this.userList();\n  }\n\n  /**\n   * Approval User confirmation\n   * @param user\n   * @returns\n   */\n  approvalUser(user: any) {\n    this.dialogConfirmService.open(DialogApprovalComponent, {\n      context: { user },\n    }).onClose.subscribe((result) => {\n      if (result) {\n        this.approveUser(user);\n      }\n    });\n  }\n\n  approveUser(user: any) {\n    const modifiedDate = this.datePipe.transform(new Date(), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n\n    const approvalUser = {\n      mobile: user.mobile,\n      status: \"Active\",\n      modifiedby: \"Admin\",\n      modifiedon: modifiedDate\n    }\n\n    this.userService.approveUser(approvalUser).subscribe(\n      (response) => {\n        this.userList();\n        if (HttpStatusCode.Ok) {\n          this.toastrService.show(response[\"message\"], \"Success\", {\n            status: \"success\",\n            duration: 8000,\n          });\n        } else {\n          this.toastrService.show(response[\"message\"], \"Warning\", {\n            status: \"warning\",\n            duration: 8000,\n          });\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n\n  /**\n   * Declined Company\n   * @param user\n   * @returns\n   */\n  declinedUser(user: any) {\n    this.dialogConfirmService.open(DialogDeclinedComponent, {\n      context: { user },\n    }).onClose.subscribe((result) => {\n      if (result) {\n        this.declineUser(user);\n      }\n    });\n  }\n\n  declineUser(user: any) {\n    const modifiedDate = this.datePipe.transform(new Date(), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n\n    const declinedUser = {\n      mobile: user.mobile,\n      status: 'Decline',\n      modifiedby: \"Admin\",\n      modifiedon: modifiedDate\n    }\n\n    this.userService.declinedUser(declinedUser).subscribe(\n      (response) => {\n        this.userList();\n        if (HttpStatusCode.Ok) {\n          this.toastrService.show(response[\"message\"], \"Success\", {\n            status: \"success\",\n            duration: 8000,\n          });\n        } else {\n          this.toastrService.show(response[\"message\"], \"Warning\", {\n            status: \"warning\",\n            duration: 8000,\n          });\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n\n  /**\n   * Company List\n   * @param null\n   * @returns\n   */\n  // Define your static user data\n  //  staticUsers: any[] = [\n  //   { name: 'Nanda Kumar', mobile: '9674662433', email: 'nanda@example.com', address: 'Pollachi', active: true },\n  //   { name: 'Karuppu Swamy', mobile: '7536462774', email: 'karuppu@example.com', address: 'pollachi', active: false },\n  //   { name: 'Sudarsan', mobile: '957768678', email: 'sudarsan@example.com', address: 'coimbatore', active: true },\n  //   { name: 'vijay', mobile: '96733562433', email: 'vijay@example.com', address: 'kerala', active: false },\n  //   { name: 'ajith', mobile: '753362774', email: 'ajith@example.com', address: 'pollachi', active: false },\n  //   { name: 'vishal', mobile: '9925378934', email: 'vishal@example.com', address: 'coimbatore', active: true },\n  //   { name: 'vicky ', mobile: '9674662413e', email: 'vicky@example.com', address: 'delhi', active: true },\n  //   { name: 'vikram ', mobile: '7533456774', email: 'vikram@example.com', address: 'pollachi', active: false },\n  //   { name: 'mahan', mobile: '9954345334', email: 'mahan@example.com', address: 'thiruppur', active: true },\n  //   { name: 'priya', mobile: '9674677433', email: 'priya@example.com', address: 'udumalai', active: false },\n  //   { name: ' divya', mobile: '75335662774', email: 'divya@example.com', address: 'salem', active: false },\n  //   { name: 'sree', mobile: '99253499334', email: 'sree@example.com', address: 'coimbatore', active: true },\n  //   { name: 'NandaKumar', mobile: '96746772433', email: 'nanda@example.com', address: 'chennai', active: true },\n  //   { name: 'KaruppuSwamy', mobile: '7536492774', email: 'karuppu@example.com', address: 'pollachi', active: false },\n  //   { name: 'harsatha', mobile: '9927845334', email: 'harsatha@example.com', address: 'cochin', active: false },\n  //   { name: ' Kumar', mobile: '96746620983', email: 'kumar@example.com', address: 'palani', active: true },\n  //   { name: 'Karuppu ', mobile: '7536344774', email: 'karuppu@example.com', address: 'madurai', active: false },\n  //   { name: 'murugan', mobile: '9925345564', email: 'murugan@example.com', address: 'chennai', active: true },\n  //   { name: 'mohan', mobile: '9968662433', email: 'mohan@example.com', address: 'Pollachi', active: true },\n  //   { name: 'mathan', mobile: '7566462774', email: 'mathan@example.com', address: 'covai', active: false },\n  //   { name: 'karthik', mobile: '9456745334', email: 'karthik@example.com', address: 'thiruppur', active: true },\n  //   { name: 'prasanth', mobile: '9984662433', email: 'prasanth@example.com', address: 'cochin', active: true },\n  //   { name: 'arun', mobile: '7345462774', email: 'arun@example.com', address: 'salem', active: false },\n  //   { name: 'muruga', mobile: '9657345334', email: 'muruga@example.com', address: 'coimbatore', active: false },\n  //   { name: 'krishna', mobile: '96767762433', email: 'krishnananda@example.com', address: 'london', active: true },\n  //   { name: 'Karuppu ', mobile: '7566462774', email: 'karuppu@example.com', address: 'USA', active: false },\n  //   { name: 'kanna', mobile: '99256645334', email: 'kanna@example.com', address: 'UAE', active: true },\n  //   { name: 'krish Kumar', mobile: '9674678433', email: 'krish Kumar@example.com', address: 'Canada', active: false },\n  //   { name: 'vishnu', mobile: '7234662774', email: 'vishnu@example.com', address: 'bangalur', active: false },\n  //   { name: 'karnan', mobile: '9659120294', email: 'karnan@example.com', address: 'goa', active: false },\n\n  //  ];\n\n  userList() {\n\n    //this.users = this.staticUsers;\n\n    this.userService.getUserList().subscribe(\n      (response) => {\n        this.users = response;\n        // if (HttpStatusCode.Ok) {\n        //   this.toastrService.show(response[\"message\"], \"Success\", {\n        //     status: \"success\",\n        //     duration: 8000,\n        //   });\n        // } else {\n        //   this.toastrService.show(response[\"message\"], \"Warning\", {\n        //     status: \"warning\",\n        //     duration: 8000,\n        //   });\n        //}\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n\n}\n","<nb-card class=\"inline-form-card full-card\">\n\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <nb-card-header>\n        <div class=\"row\">\n            <div class=\"col-md-12 text-center bold-text\">User Register List</div>\n            <!-- <div class=\"col-md-2\">\n                <button class=\"btn btn-sm btn-success\" (click)=\"createUser()\">Create User</button>\n            </div> -->\n        </div>\n    </nb-card-header>\n\n    <nb-card-body>\n\n        <div class=\"card\">\n            <p-table [value]=\"users\" [paginator]=\"true\" [rows]=\"rows\" [showCurrentPageReport]=\"true\" [autoLayout]=\"true\"\n                [rowsPerPageOptions]=\"itemsPerPage\">\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <ng-container *ngFor=\"let col of columns\">\n                            <th *ngIf=\"col.show\" [pSortableColumn]=\"(col.sort==true)? col.field:false\"\n                                [class]=\"col.field+'-campaigns'\" class=\"text-center\">\n                                <p-sortIcon *ngIf=\"col.sort==true\" [field]=\"col.field\" class=\"sort-icon\"\n                                    [id]=\"col.field+'-sort'\">\n                                </p-sortIcon>\n                                <span>{{col.header}}</span>\n                            </th>\n                        </ng-container>\n                        <th class=\"text-center\">Actions</th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-user>\n                    <tr>\n                        <td class=\"text-center\">{{user.name}}</td>\n                        <td class=\"text-center\" style=\"width: 18%;\">{{user.mobile}}</td>\n                        <td class=\"text-center\">{{user.email}}</td>\n                        <td class=\"text-center\">{{user.address}}</td>\n                        <td class=\"text-center\">{{user.status}}</td>\n                        <!-- <td class=\"text-center\">{{user.active == true ? 'Active' : 'InActive'}}</td> -->\n                        <td class=\"text-center action\">\n                            <button (click)=\"approvalUser(user)\" routerLinkActive=\"router-link-active\"\n                                nbTooltip=\"Approval\" nbTooltipPlacement=\"top\"\n                                class=\"btn btn-outline-success btn-sm action-button\">\n                                <nb-icon icon=\"checkmark-circle-2-outline\" pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;&nbsp;\n                            <button (click)=\"declinedUser(user)\" routerLinkActive=\"router-link-active\"\n                                nbTooltip=\"Declined\" nbTooltipPlacement=\"top\"\n                                class=\"btn btn-outline-danger btn-sm action-button\">\n                                <nb-icon icon=\"close-circle-outline\" pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>\n\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n        <!-- <ngx-approval-confirm *ngIf=\"showApprovalDialog\" (close)=\"showApprovalDialog = false\"></ngx-approval-confirm> -->\n    </nb-card-body>\n</nb-card>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { NbAuthJWTToken, NbAuthService } from \"@nebular/auth\";\n\n// Rxjs\nimport { BehaviorSubject, Observable, throwError, of } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\n\n// constant\nimport { API_END_POINTS, getApiEndPoint } from \"../../../shared/constants/api-constant\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  user = {};\n\n  constructor(\n    private userServicehttp: HttpClient,\n    private authService: NbAuthService\n  ) {\n    this.authService.onTokenChange().subscribe((token: NbAuthJWTToken) => {\n      if (token.isValid()) {\n        this.user = token.getPayload(); // here we receive a payload from the token and assigns it to our `user` variable\n      }\n    });\n  }\n\n  /**\n   * User List\n   * @returns\n   */\n  getUserList(): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.USER.LIST);\n    const urlWithParams = `${apiURL}?status=Verified`;\n    return this.userServicehttp.get(urlWithParams).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n  /**\n   * Approval User\n   * @param approvalData\n   * @returns\n   *\n   */\n  approveUser(approvalUser): Observable<any> {\n\n    let apiURL = getApiEndPoint(API_END_POINTS.USER.APPROVAL)\n    return this.userServicehttp.put(apiURL, approvalUser).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n\n\n  /**\n   * Delete User\n   * @param deleteData\n   * @returns\n   *\n   */\n\n\n  declinedUser(declinedUser): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.USER.APPROVAL);\n    return this.userServicehttp.put(apiURL, declinedUser).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Delete User\n   * @param deleteData\n   * @returns\n   *\n   */\n  deleteUser(deleteData): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.USER.DELETE);\n    return this.userServicehttp.delete(apiURL, deleteData).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Add User\n   * @param Values\n   * @returns\n   *\n   */\n  AddUserDetials(user_obj): Observable<any> {\n    let apiURL = (user_obj[\"flag\"] == 0) ? getApiEndPoint(API_END_POINTS.USER.CREATE) : getApiEndPoint(API_END_POINTS.USER.UPDATE);\n    return this.userServicehttp.post(apiURL, user_obj).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}