{"version":3,"file":"src_app_admin_users_users_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAIA,OAAO;AAC4D;AACP;AAE5D,WAAW;AAC6E;;;;AAMjF,MAAM,YAAY;IAIvB,YACU,eAA2B,EAC3B,WAA0B;QAD1B,oBAAe,GAAf,eAAe,CAAY;QAC3B,gBAAW,GAAX,WAAW,CAAe;QAJpC,SAAI,GAAG,EAAE,CAAC;QAaV,uCAAuC;QAE/B,gBAAW,GAAG,IAAI,iDAAe,CAAM,IAAI,CAAC,CAAC;QATnD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,KAAqB,EAAE,EAAE;YACnE,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;gBACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,iFAAiF;aAClH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAMD,cAAc,CAAC,IAAS;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED;;;OAGG;IACH,WAAW;QACT,IAAI,MAAM,GAAG,8EAAc,CAAC,oFAAwB,CAAC,CAAC;QACtD,MAAM,aAAa,GAAG,GAAG,MAAM,6BAA6B,CAAC;QAC7D,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CACjD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,UAAU,CAAC,MAAc;QACvB,IAAI,MAAM,GAAG,8EAAc,CAAC,GAAG,sFAA0B,IAAI,MAAM,EAAE,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAChD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CAAC,YAAY;QAC3B,IAAI,MAAM,GAAG,8EAAc,CAAC,wFAA4B,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,IAAI,CACxD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,UAAU,CAAC,IAAI;QACb,IAAI,MAAM,GAAG,8EAAc,CAAC,GAAG,sFAA0B,EAAE,CAAC,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAChD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAID;;;;;OAKG;IACH,cAAc,CAAC,QAAQ;QACrB,IAAI,MAAM,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,8EAAc,CAAC,sFAA0B,CAAC,CAAC,CAAC,CAAC,8EAAc,CAAC,sFAA0B,CAAC,CAAC;QAC/H,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI,CACrD,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;wEA1HU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;;ACZgD;AAGO;AAGT;;;;;;;;ICMlC,wEAAmF;IAC/E,4EAAgB;IAAA,4DAAI;;;IAF5B,wEAA4F;IACxF,6HACwB;IAC5B,qEAAe;;;IAFuB,0DAA+C;IAA/C,kHAA+C;;;IAIjF,mEAEI;;;IAHR,wEAAwF;IACpF,6HAEI;IACR,qEAAe;;;IAHuB,0DAAkD;IAAlD,qHAAkD;;;IAapF,wEAAqF;IACjF,oFAAwB;IAAA,4DAAI;;;IAHpC,wEACsF;IAClF,6HACgC;IACpC,qEAAe;;;IAFuB,0DAAiD;IAAjD,oHAAiD;;;IAGvF,wEAAsE;IAClE,wEAAiC;IAAA,0FAA+B;IAAA,4DAAI;IACxE,qEAAe;;;IAYX,wEAAoF;IAChF,6EAAiB;IAAA,4DAAI;;;IACzB,wEAAmF;IAC/E,qFAAyB;IAAA,4DAAI;;;IALrC,wEACoF;IAChF,6HACyB;IACzB,6HACiC;IACrC,qEAAe;;;IAJuB,0DAAgD;IAAhD,mHAAgD;IAEhD,0DAA+C;IAA/C,kHAA+C;;;IAYjF,wEAAsF;IAClF,+EAAmB;IAAA,4DAAI;;;IAH/B,wEACwF;IACpF,6HAC2B;IAC/B,qEAAe;;;IAFuB,0DAAkD;IAAlD,qHAAkD;;;IAYpF,wEAAsF;IAClF,+EAAmB;IAAA,4DAAI;;;IAH/B,wEACwF;IACpF,6HAC2B;IAC/B,qEAAe;;;IAFuB,0DAAkD;IAAlD,qHAAkD;;;IAYpF,wEAAuF;IACnF,gFAAoB;IAAA,4DAAI;;;IAHhC,wEAC0F;IACtF,6HAC4B;IAChC,qEAAe;;;IAFuB,0DAAmD;IAAnD,sHAAmD;;ADtE9G,MAAM,oBAAoB;IAa/B,YACU,WAAwB,EACxB,MAAc,EACd,MAAsB,EACtB,WAAyB,EACzB,aAA8B,EAC9B,QAAkB;QALlB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAc;QACzB,kBAAa,GAAb,aAAa,CAAiB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QAhB5B,cAAS,GAAG,KAAK,CAAC;QAClB,qBAAqB;QACrB,iBAAY,GAAG,KAAK,CAAC;QAErB,eAAe;QACf,iBAAY,GAAG,IAAI,CAAC;IAYhB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,mEAAmE;QAEnE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,sCAAsC;gBACtC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;oBAC1B,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;oBAC3B,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;oBAC/B,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;oBAC7B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;oBACjC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;oBACjC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;iBACpC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD;;OAEG;IAEH,qBAAqB;QACnB,MAAM,UAAU,GAAG,6BAA6B,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;YAClE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IACf,YAAY;QACV,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,MAAM,CAAC;SACf;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,OAAO;SACR,CAAC,+BAA+B;QAEjC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YAC1C,gCAAgC;YAChC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;SACjC;QAED,sDAAsD;QACtD,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,8BAA8B,CAAC,CAAC;QAEzF,+CAA+C;QAC/C,MAAM,IAAI,GAAG;YACX,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;YACvB,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI;YACjC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM;YACrC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK;YACnC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO;YACvC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO;YACvC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ;YACzC,UAAU,EAAE,OAAO;YACnB,UAAU,EAAE,YAAY;SACzB;QACD,sCAAsC;QACtC,sDAAsD;QACtD,4FAA4F;QAE5F,gDAAgD;QAChD,iCAAiC;QACjC,4DAA4D;QAC5D,gEAAgE;QAChE,8DAA8D;QAC9D,kEAAkE;QAClE,kEAAkE;QAClE,oEAAoE;QACpE,8CAA8C;QAC9C,mDAAmD;QAEnD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;aAC9B,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,eAAmB;gBACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE;oBACtD,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;iBAAM,EAKN;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mFAAgB,EAAE,mFAAgB,EAAE,yFAAsB,EAAE,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mFAAgB,EAAE,mFAAgB,EAAE,yFAAsB,EAAE,CAAC,CAAC;IACtF,CAAC;;wFAlJU,oBAAoB;kHAApB,oBAAoB;QCfjC,yEAAiB;QAGW,oEAAS;QAAA,4DAAiB;QAC1C,kFAAgE;QAE5B,gJAAY,cAAU,IAAC;QAEnD,yEAA4B;QACiC,kEAAM;QAAA,4DAAQ;QACvE,0EAAsB;QAClB,uEAA4D;QAC5D,oIAGe;QACf,oIAIe;QACnB,4DAAM;QAGV,0EAA4B;QACkC,0EAAc;QAAA,4DAAQ;QAChF,0EAAsB;QAClB,wEAA8D;QAC9D,oIAIe;QACf,oIAEe;QAEnB,4DAAM;QAGV,0EAA4B;QACiC,oEAAQ;QAAA,4DAAQ;QACzE,0EAAsB;QAClB,wEACyD;QACzD,oIAMe;QACnB,4DAAM;QAGV,0EAA4B;QACmC,qEAAS;QAAA,4DAAQ;QAC5E,0EAAsB;QAClB,wEAA+D;QAC/D,oIAIe;QACnB,4DAAM;QAGV,0EAA4B;QACmC,qEAAS;QAAA,4DAAQ;QAC5E,0EAAsB;QAClB,wEAA+D;QAC/D,oIAIe;QACnB,4DAAM;QAGV,0EAA4B;QACoC,sEAAU;QAAA,4DAAQ;QAC9E,0EAAsB;QAClB,wEAAgE;QAChE,oIAIe;QACnB,4DAAM;QAGV,0EAA4B;QAG6B,kEAAM;QAAA,4DAAS;QAChE,0EACA;QAAA,8EAC0C;QADT,6IAAS,oBAAgB,IAAC;QACjB,qEAAG;QACrC,oEACJ;QAAA,4DAAI;;QA/FV,0DAA0B;QAA1B,uFAA0B;QAE9B,0DAAyB;QAAzB,sFAAyB;QAMJ,0DAA2E;QAA3E,+IAA2E;QAI3E,0DAAuE;QAAvE,2IAAuE;QAajF,0DAA+E;QAA/E,mJAA+E;QAIrE,0DAAqD;QAArD,qHAAqD;QAa/D,0DAA6E;QAA7E,iJAA6E;QAc7E,0DAAiF;QAAjF,qJAAiF;QAYjF,0DAAiF;QAAjF,qJAAiF;QAYjF,0DAAmF;QAAnF,uJAAmF;QAUpF,0DAA4C;QAA5C,6GAA4C;;;;;;;;;;;;;;;;;;;;AC/DrE,MAAM,qBAAqB;IAIhC,YAAsB,SAA6C;QAA7C,cAAS,GAAT,SAAS,CAAoC;IAAI,CAAC;IAExE,QAAQ,KAAW,CAAC;IAEpB,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,4CAA4C;IAC3E,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,0DAA0D;IAC7F,CAAC;;0FAdU,qBAAqB;mHAArB,qBAAqB;QAxB9B,0EAAS;QAEF,8EAAmB;QAAA,4DAAI;QAE5B,+EAAc;QACW,qGAA0C;QAAA,oEAAG;QAAA,uDAAe;QAAA,4DAAI;QAAA,4DAAC;QAAA,4DAAI;QAC5F,sEAAI;QACU,iEAAK;QAAA,4DAAS;QAAC,wDAAe;QAAA,4DAAK;QAC/C,sEAAI;QAAQ,0EAAc;QAAA,4DAAS;QAAC,wDAAiB;QAAA,4DAAK;QAC1D,sEAAI;QAAQ,mEAAO;QAAA,4DAAS;QAAC,wDAAgB;QAAA,4DAAK;QAClD,sEAAI;QAAQ,oEAAQ;QAAA,4DAAS;QAAC,wDAAkB;QAAA,4DAAK;QACrD,sEAAI;QAAQ,qEAAS;QAAA,4DAAS;QAAC,wDAAkB;QAAA,4DAAK;QACtD,sEAAI;QAAQ,qEAAS;QAAA,4DAAS;QAAC,wDAAmB;QAAA,4DAAK;QACvD,sEAAI;QAAQ,sEAAU;QAAA,4DAAS;QAAC,wDAAmB;QAAA,4DAAK;QACxD,sEAAI;QAAQ,mEAAO;QAAA,4DAAS;QAAC,wDAAyC;QAAA,4DAAK;QAG/E,qFAAoC;QACA,8IAAS,gBAAY,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAAA,+EACxE;QAAA,6EAAoD;QAAlB,8IAAS,WAAO,IAAC;QAAC,kEAAM;QAAA,4DAAS;;QAdC,0DAAe;QAAf,8EAAe;QAEtD,0DAAe;QAAf,wFAAe;QACN,0DAAiB;QAAjB,0FAAiB;QACxB,0DAAgB;QAAhB,yFAAgB;QACf,0DAAkB;QAAlB,2FAAkB;QACjB,0DAAkB;QAAlB,2FAAkB;QAClB,0DAAmB;QAAnB,4FAAmB;QAClB,0DAAmB;QAAnB,4FAAmB;QACtB,0DAAyC;QAAzC,kHAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;ACdL;AACT;;;;;;;;;;ICYlC,4EAEa;;;IAFsB,+EAAmB;;;IAF1D,yEACyD;IACrD,8JAEa;IACb,uEAAM;IAAA,uDAAc;IAAA,4DAAO;;;IAJ3B,qFAAgC;IADE,uHAAqD;IAE1E,0DAAoB;IAApB,qFAAoB;IAG3B,0DAAc;IAAd,8EAAc;;;IAN5B,wEAA0C;IACtC,wIAMK;IACT,qEAAe;;;IAPN,0DAAc;IAAd,6EAAc;;;IAF3B,qEAAI;IACA,6IAQe;IACf,wEAAwB;IAAA,kEAAO;IAAA,4DAAK;;;IATN,0DAAU;IAAV,mFAAU;;;;IAa5C,qEAAI;IACyD,uDAAa;IAAA,4DAAK;IAC3E,yEAA2D;IAAA,uDAAe;IAAA,4DAAK;IAC/E,yEAA0D;IAAA,uDAAc;IAAA,4DAAK;IAC7E,yEAA4D;IAAA,uDAAgB;IAAA,4DAAK;IACjF,qEAAI;IAAA,wDAAe;IAAA,4DAAK;IACxB,0EAA+B;IACnB,qWAAS,wBAAc,IAAC;IAE5B,0EAA+D;IACnE,4DAAS;IAAA,mEACT;IAAA,8EACwD;IAD7B,sWAAS,8BAAmB,IAAC;IAEpD,0EAA+E;IACnF,4DAAS;IAAA,mEACT;IAAA,8EAGsI;IAFlI,sWAAS,uDAAyC,QAAQ,GAAG,OAAO,GAAG,SAAS,CAAE,IAAC;IAGnF,0EACmC;IACvC,4DAAS;IAAA,mEAEb;IAAA,4DAAK;;;IAtBD,0DAA2B;IAA3B,8FAA2B;IAA0B,0DAAa;IAAb,6EAAa;IAClE,0DAA6B;IAA7B,gGAA6B;IAA0B,0DAAe;IAAf,+EAAe;IACtE,0DAA4B;IAA5B,+FAA4B;IAA0B,0DAAc;IAAd,8EAAc;IACpE,0DAA8B;IAA9B,iGAA8B;IAA0B,0DAAgB;IAAhB,gFAAgB;IACxE,0DAAe;IAAf,+EAAe;IAUP,0DAA2D;IAA3D,uHAA2D;IAItD,0DAAiE;IAAjE,gIAAiE;;;AD/BnG,MAAM,iBAAiB;IAU5B,YACU,oBAAyC,EACzC,aAA8B,EAC9B,MAAc,EACd,MAAsB,EACtB,WAAyB,EACzB,aAA8B,EAC9B,QAAkB;QANlB,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,kBAAa,GAAb,aAAa,CAAiB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAc;QACzB,kBAAa,GAAb,aAAa,CAAiB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QAf5B,iBAAY,GAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAInC,UAAK,GAAG,CAAC,CAAC;QACV,SAAI,GAAG,EAAE,CAAC;IAWN,CAAC;IAEL,QAAQ;QACN,4DAA4D;QAC5D,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YACzD,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YACnE,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YAC5D,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YAC/D,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;SAC9D,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAGD;;;;OAIG;IACH,QAAQ,CAAC,IAAS;QAChB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,gDAAgD;QACvF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnB,mFAAgB;YAChB,mFAAgB;YAChB,yFAAsB;SACvB,CAAC,CAAC;IACL,CAAC;IAGD;;;;OAIG;IACH,aAAa,CAAC,IAAS;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,2EAAqB,EAAE;YAC7C,OAAO,EAAE,EAAE,IAAI,EAAE;SAClB,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,IAAI,MAAM,EAAE;gBACV,sBAAsB;gBACtB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAS;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3C,CAAC,QAAa,EAAE,EAAE;YAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,eAAmB;gBACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE;oBACtD,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;iBAAM,EAKN;QACH,CAAC,CAAC;IACN,CAAC;IAED;;;;OAIG;IACH,mBAAmB,CAAC,IAAS,EAAE,MAAc;QAC3C,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC;YAChC,MAAM,EAAE,MAAM,GAAG,KAAK,GAAG,cAAc;YACvC,IAAI,EAAE,wBAAwB;YAC9B,OAAO,EACL,mCAAmC;gBACnC,MAAM;gBACN,KAAK;gBACL,IAAI,CAAC,IAAI;gBACT,SAAS;YACX,MAAM,EAAE,GAAG,EAAE;gBACX,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,IAAS,EAAE,MAAc;QACxC,+BAA+B;QAC/B,6CAA6C;QAC7C,KAAK;QACL,sDAAsD;QACtD,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,8BAA8B,CAAC,CAAC;QAEzF,MAAM,YAAY,GAAG;YACnB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,MAAM,EAAE,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ;YAClD,UAAU,EAAE,OAAO;YACnB,UAAU,EAAE,YAAY;SACzB;QACD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,SAAS,CACvD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,eAAmB;gBACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE;oBACtD,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;iBAAM,EAKN;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;OAIG;IAEH,+BAA+B;IAC/B,yBAAyB;IACzB,wHAAwH;IACxH,2HAA2H;IAC3H,uHAAuH;IACvH,KAAK;IAEL,QAAQ;QAEN,gCAAgC;QAChC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CACtC,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACtB,2BAA2B;YAC3B,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,WAAW;YACX,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,IAAI;QACN,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;kFAtLU,iBAAiB;+GAAjB,iBAAiB;QClB9B,6EAA4C;QAExC,6EAA6D;QAC7D,iFAAgB;QAEqC,qEAAU;QAAA,4DAAM;QAIrE,+EAAc;QAMF,6HAac;QACd,iIA0Bc;QAClB,4DAAU;;QAtDD,0DAAyB;QAAzB,gIAAyB;QAUzB,0DAAe;QAAf,4EAAe;;;;;;;;;;;;;;;;;;;;ACVmB;AACa;AACW;;;AAG/E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,6EAAiB;KAC7B;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,wFAAoB;KAChC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,wFAAoB;KAChC;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,6EAAiB;KAC7B;CACF,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAHpB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,kBAAkB,oFAFnB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BuB;AAC4B;AACT;AA2B1C;AAEgC;AAExD,cAAc;AACsF;AAEpG,UAAU;AACkC;AACA;AACE;AACc;AACV;AAEU;AACQ;AACW;AACH;;;AAiDrE,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;6GANX;QACT,4DAAmB;QACnB,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,mFAAoB,EAAE,KAAK,EAAE,IAAI,EAAE;QAC3E,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,mFAAoB,EAAE,KAAK,EAAE,IAAI,EAAE;KAC5E,YAzCQ;YACP,yDAAY;YACZ,kEAAgB;YAChB,4DAAe;YACf,0DAAa;YACb,gEAAmB;YACnB,6DAAgB;YAChB,kEAAqB;YACrB,8DAAiB;YACjB,gEAAmB;YACnB,4DAAe;YACf,4DAAe;YACf,6DAAgB;YAChB,wDAAW;YACX,gEAAmB;YACnB,4DAAW;YACX,2DAAc;YACd,gEAAmB;YACnB,4DAAe;YACf,yDAAY;YACZ,2DAAc;YACd,yDAAY;YACZ,8DAAiB;YACjB,yDAAY;YACZ,qEAAkB;YAClB,yDAAY;YACZ,0DAAa;YACb,6DAAgB;YAChB,2DAAc;YACd,2DAAc;YACd,gEAAmB;YACnB,mEAAsB,EAAE;YACxB,uDAAW;YACX,yDAAY;YACZ,uEAAmB;YACnB,yDAAY;SACb;mIAOU,WAAW,mBA5CP,6EAAiB,EAAE,wFAAoB,EAAE,qFAAqB,aAE3E,yDAAY;QACZ,kEAAgB;QAChB,4DAAe;QACf,0DAAa;QACb,gEAAmB;QACnB,6DAAgB;QAChB,kEAAqB;QACrB,8DAAiB;QACjB,gEAAmB;QACnB,4DAAe;QACf,4DAAe;QACf,6DAAgB;QAChB,wDAAW;QACX,gEAAmB;QACnB,4DAAW;QACX,2DAAc;QACd,gEAAmB;QACnB,4DAAe;QACf,yDAAY;QACZ,2DAAc;QACd,yDAAY;QACZ,8DAAiB;QACjB,yDAAY;QACZ,qEAAkB;QAClB,yDAAY;QACZ,0DAAa;QACb,6DAAgB;QAChB,2DAAc;QACd,2DAAc;QACd,gEAAmB,+DAEnB,uDAAW;QACX,yDAAY;QACZ,uEAAmB;QACnB,yDAAY","sources":["./src/app/admin/users/services/users.service.ts","./src/app/admin/users/user-add-edit/user-add-edit.component.ts","./src/app/admin/users/user-add-edit/user-add-edit.component.html","./src/app/admin/users/user-list/dialog-delete.component.ts","./src/app/admin/users/user-list/user-list.component.ts","./src/app/admin/users/user-list/user-list.component.html","./src/app/admin/users/users-routing.module.ts","./src/app/admin/users/users.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { NbAuthJWTToken, NbAuthService } from \"@nebular/auth\";\n\n// Rxjs\nimport { BehaviorSubject, Observable, throwError, of } from \"rxjs\";\nimport { catchError, map, switchMap } from \"rxjs/operators\";\n\n// constant\nimport { API_END_POINTS, getApiEndPoint } from \"../../../shared/constants/api-constant\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  user = {};\n\n  constructor(\n    private userServicehttp: HttpClient,\n    private authService: NbAuthService\n  ) {\n    this.authService.onTokenChange().subscribe((token: NbAuthJWTToken) => {\n      if (token.isValid()) {\n        this.user = token.getPayload(); // here we receive a payload from the token and assigns it to our `user` variable\n      }\n    });\n  }\n\n  //pass select user Details in User-Edit\n\n  private userDetails = new BehaviorSubject<any>(null);\n\n  setUserDetails(user: any) {\n    this.userDetails.next(user);\n  }\n\n  getUserDetails() {\n    return this.userDetails.asObservable();\n  }\n\n  /**\n   * User List\n   * @returns\n   */\n  getUserList(): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.USER.LIST);\n    const urlWithParams = `${apiURL}?status=Active And Inactive`;\n    return this.userServicehttp.get(urlWithParams).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Delete User\n   * @param userId\n   * @returns\n   *\n   */\n  deleteUser(userId: number): Observable<any> {\n    let apiURL = getApiEndPoint(`${API_END_POINTS.USER.DELETE}/${userId}`);\n    return this.userServicehttp.put(apiURL, null).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Bllock/UnBlock User\n   * @param deleteData\n   * @returns\n   *\n   */\n  blockUnBlockUser(blockUnBlock): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.USER.APPROVAL);\n    return this.userServicehttp.put(apiURL, blockUnBlock).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Update User details\n   * @param user\n   * @returns\n   *\n   */\n  updateUser(user): Observable<any> {\n    let apiURL = getApiEndPoint(`${API_END_POINTS.USER.UPDATE}`);\n    console.log(user)\n    return this.userServicehttp.put(apiURL, user).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n\n\n  /**\n   * Add User\n   * @param Values\n   * @returns\n   *\n   */\n  AddUserDetials(user_obj): Observable<any> {\n    let apiURL = (user_obj[\"flag\"] == 0) ? getApiEndPoint(API_END_POINTS.USER.CREATE) : getApiEndPoint(API_END_POINTS.USER.UPDATE);\n    return this.userServicehttp.post(apiURL, user_obj).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NbToastrService } from '@nebular/theme';\nimport { ROUTE_PATH } from '../../../shared/constants/route-path.constant';\nimport { UsersService } from '../services/users.service';\nimport { DatePipe } from '@angular/common';\nimport { HttpParams, HttpStatusCode } from '@angular/common/http';\n\n\n@Component({\n  selector: 'ngx-user-add-edit',\n  templateUrl: './user-add-edit.component.html',\n  styleUrls: ['./user-add-edit.component.scss']\n})\nexport class UserAddEditComponent implements OnInit {\n\n  AddUserForm: FormGroup;\n  submitted = false;\n  //page_title: string;\n  data_loading = false;\n\n  //show password\n  showPassword = true;\n\n  //userlist pass user data\n  userDetails: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private aRoute: ActivatedRoute,\n    private userService: UsersService,\n    private toastrService: NbToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.AddUserFormInitialize();\n\n    // Check if user details are passed user list, service to user-edit\n\n    this.userService.getUserDetails().subscribe(user => {\n      if (user) {\n        this.userDetails = user;\n        // Pre-fill the form with user details\n        this.AddUserForm.patchValue({\n          name: this.userDetails.name,\n          mobile: this.userDetails.mobile,\n          email: this.userDetails.email,\n          address: this.userDetails.address,\n          pincode: this.userDetails.pincode,\n          password: this.userDetails.password,\n        });\n      }\n    });\n  }\n\n\n  /**\n   * User Form Initialize\n   */\n\n  AddUserFormInitialize() {\n    const emailRegex = \"[a-z0-9]+@[a-z]+.[a-z]{2,3}\";\n    this.AddUserForm = this.formBuilder.group({\n      name: [\"\", [Validators.required]],\n      mobile: [\"\", [Validators.required, Validators.maxLength(10)]],\n      email: [\"\", [Validators.required, Validators.pattern(emailRegex)]],\n      address: [\"\", [Validators.required]],\n      pincode: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]],\n    });\n  }\n\n  //Show Password\n  getInputType() {\n    if (this.showPassword) {\n      return 'text';\n    }\n    return 'password';\n  }\n\n  toggleShowPassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  /**\n   * User Form Submit\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.AddUserForm.invalid) {\n      return;\n    } // stop here if form is invalid\n\n    if (this.router.url.indexOf(\"edit\") !== -1) {\n      // For editing, pass the user ID\n      this.AddUserForm.value.userId = this.userDetails.id;\n      this.aRoute.snapshot.paramMap.get(\"id\");\n      this.AddUserForm.value.flag = 1;\n    } else {\n      this.AddUserForm.value.flag = 0;\n    }\n\n    // Get the current date and time in the desired format\n    const modifiedDate = this.datePipe.transform(new Date(), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n\n    // Prepare the user object with updated details\n    const user = {\n      id: this.userDetails.id,\n      name: this.AddUserForm.value.name,\n      mobile: this.AddUserForm.value.mobile,\n      email: this.AddUserForm.value.email,\n      address: this.AddUserForm.value.address,\n      pincode: this.AddUserForm.value.pincode,\n      password: this.AddUserForm.value.password,\n      modifiedby: \"Admin\",\n      modifiedon: modifiedDate\n    }\n    // const userId = this.userDetails.id;\n    // Get the current date and time in the desired format\n    // const modifiedDate = this.datePipe.transform(new Date(), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n\n    // Build the request parameters using HttpParams\n    // let params = new HttpParams();\n    // params = params.set('Name', this.AddUserForm.value.name);\n    // params = params.set('Mobile', this.AddUserForm.value.mobile);\n    // params = params.set('Email', this.AddUserForm.value.email);\n    // params = params.set('Address', this.AddUserForm.value.address);\n    // params = params.set('pincode', this.AddUserForm.value.pincode);\n    // params = params.set('Password', this.AddUserForm.value.password);\n    // params = params.set('Modifiedby', 'admin');\n    // params = params.set('Modifiedon', modifiedDate);\n\n    this.userService.updateUser(user)\n      .subscribe((response) => {\n        this.backToUserList();\n        if (HttpStatusCode.Ok) {\n          this.toastrService.show(response[\"message\"], \"Success\", {\n            status: \"success\",\n            duration: 8000,\n          });\n        } else {\n          this.toastrService.show(response[\"message\"], \"Warning\", {\n            status: \"warning\",\n            duration: 8000,\n          });\n        }\n        this.router.navigate([ROUTE_PATH.ADMIN, ROUTE_PATH.USERS, ROUTE_PATH.USERES.LIST,]);\n      });\n  }\n\n  /**\n   * Back to User List\n   * @param\n   * @returns\n   */\n  backToUserList() {\n    this.router.navigate([ROUTE_PATH.ADMIN, ROUTE_PATH.USERS, ROUTE_PATH.USERES.LIST,]);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>Edit User</nb-card-header>\n            <nb-card-body [nbSpinner]=\"data_loading\" nbSpinnerStatus=\"info\">\n\n                <form [formGroup]=\"AddUserForm\" (ngSubmit)=\"onSubmit()\">\n\n                    <div class=\"form-group row\">\n                        <label for=\"name\" class=\"label col-sm-3 col-form-label\"> Name *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"name\">\n                            <ng-container *ngIf=\"AddUserForm.controls.name.touched && AddUserForm.controls.name.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddUserForm.controls.name.errors.required\">\n                                    Name is required</p>\n                            </ng-container>\n                            <ng-container *ngIf=\"AddUserForm.get('name').touched && AddUserForm.get('name').errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddUserForm.get('name').hasError('required')\">\n                                    <!-- Name is required -->\n                                </p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"mobile\" class=\"label col-sm-3 col-form-label\">Phone Number *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"mobile\">\n                            <ng-container\n                                *ngIf=\"AddUserForm.controls.mobile.touched && AddUserForm.controls.mobile.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddUserForm.controls.mobile.errors.required\">\n                                    Phone Number is required</p>\n                            </ng-container>\n                            <ng-container *ngIf=\"AddUserForm.get('mobile').hasError('maxlength')\">\n                                <p class=\"caption status-danger\">Enter the correct Mobile Number</p>\n                            </ng-container>\n\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"email\" class=\"label col-sm-3 col-form-label\">E-Mail *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"email\" id=\"email\" placeholder=\"user@example.com\" name=\"email\"\n                                minlength=\"4\" maxlength=\"30\" formControlName=\"email\">\n                            <ng-container\n                                *ngIf=\"AddUserForm.controls.email.touched && AddUserForm.controls.email.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddUserForm.controls.email.errors.required\">\n                                    email is required</p>\n                                <p class=\"caption status-danger\" *ngIf=\"AddUserForm.controls.email.errors.pattern\">\n                                    Please enter valid email.</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"address\" class=\"label col-sm-3 col-form-label\">Address *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"address\">\n                            <ng-container\n                                *ngIf=\"AddUserForm.controls.address.touched && AddUserForm.controls.address.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddUserForm.controls.address.errors.required\">\n                                    Address is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"pincode\" class=\"label col-sm-3 col-form-label\">Pincode *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"pincode\">\n                            <ng-container\n                                *ngIf=\"AddUserForm.controls.pincode.touched && AddUserForm.controls.pincode.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddUserForm.controls.pincode.errors.required\">\n                                    Pincode is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"password\" class=\"label col-sm-3 col-form-label\">Password *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"password\">\n                            <ng-container\n                                *ngIf=\"AddUserForm.controls.password.touched && AddUserForm.controls.password.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddUserForm.controls.password.errors.required\">\n                                    Password is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"offset-sm-3 col-sm-9\">\n                            <button type=\"submit\" nbButton status=\"primary\"\n                                [disabled]=\"submitted || !AddUserForm.valid\">Submit</button>\n                            &nbsp;&nbsp;\n                            <button nbButton status=\"danger\" (click)=\"backToUserList()\"\n                                routerLinkActive=\"router-link-active\"><b>\n                                    Cancel\n                                </b></button>\n                        </div>\n                    </div>\n                </form>\n\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n\n@Component({\n  selector: 'ngx-dialog-delete',\n  template:\n  ` <nb-card>\n      <nb-card-header class=\"text-center\">\n        <b>Delete Confirmation</b>\n      </nb-card-header>\n      <nb-card-body>\n        <p class=\"text-center\">Are you sure that you want to delete this <b>{{ user.name }}</b>?</p>\n        <ul>\n          <li><strong>Name:</strong> {{ user.name }}</li>\n          <li><strong>Mobile Number:</strong> {{ user.mobile }}</li>\n          <li><strong>E-mail:</strong> {{ user.email }}</li>\n          <li><strong>Address:</strong> {{ user.address }}</li>\n          <li><strong>Pin Code:</strong> {{ user.pincode }}</li>\n          <li><strong>Password:</strong> {{ user.password }}</li>\n          <li><strong>User Type:</strong> {{ user.usertype }}</li>\n          <li><strong>Status:</strong> {{ user.active ? 'Active' : 'Inactive' }}</li>\n        </ul>\n      </nb-card-body>\n      <nb-card-footer class=\"text-center\">\n        <button nbButton status=\"success\" (click)=\"deleteUser()\">Delete</button>&nbsp;&nbsp;&nbsp;\n        <button nbButton status=\"primary\" (click)=\"close()\">Cancel</button>\n      </nb-card-footer>\n    </nb-card>\n  `,\n})\nexport class DialogDeleteComponent implements OnInit {\n\n  user: any;\n\n  constructor(protected dialogRef: NbDialogRef<DialogDeleteComponent>) { }\n\n  ngOnInit(): void { }\n\n  close() {\n    this.dialogRef.close(false); // Close the delete dialog without approving\n  }\n\n  deleteUser() {\n    this.dialogRef.close(this.user); // Close the delete dialog and trigger the approval action\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ROUTER_CONFIGURATION } from \"@angular/router\";\nimport { NbToastrService } from \"@nebular/theme\";\nimport { ConfirmationService } from 'primeng/api';\nimport { NbDialogService } from '@nebular/theme';\n\nimport { UsersService } from \"../services/users.service\";\nimport { ROUTE_PATH } from \"../../../shared/constants/route-path.constant\";\nimport { DialogDeleteComponent } from './dialog-delete.component';\nimport { API_END_POINTS, getApiEndPoint } from '../../../shared/constants/api-constant';\nimport { HttpStatusCode } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'ngx-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  itemsPerPage: any[] = [10, 25, 50];\n  users: any;\n  columns: any[]; // for table columns\n\n  first = 0;\n  rows = 10;\n  userid: any;\n\n  constructor(\n    private dialogConfirmService: ConfirmationService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private aRoute: ActivatedRoute,\n    private userService: UsersService,\n    private dialogService: NbDialogService,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit() {\n    // table   with their respective field name and header value\n    this.columns = [\n      { field: \"name\", header: \"Name\", show: true, sort: true },\n      { field: \"mobile\", header: \"Phone Number\", show: true, sort: true },\n      { field: \"email\", header: \"E-mail\", show: true, sort: true },\n      { field: \"address\", header: \"Address\", show: true, sort: true },\n      { field: \"status\", header: \"Status\", show: true, sort: true },\n    ];\n\n    this.userList();\n  }\n\n\n  /**\n   * Edit User\n   * @param user_id\n   * @returns\n   */\n  editUser(user: any) {\n    this.userService.setUserDetails(user); // Pass the selected user details to the service\n    this.router.navigate([\n      ROUTE_PATH.ADMIN,\n      ROUTE_PATH.USERS,\n      ROUTE_PATH.USERES.EDIT\n    ]);\n  }\n\n\n  /**\n   * Delete User confirmation\n   * @param user\n   * @returns\n   */\n  confirmDelete(user: any) {\n    this.dialogService.open(DialogDeleteComponent, {\n      context: { user },\n    }).onClose.subscribe((result) => {\n      if (result) {\n        // console.log(result)\n        this.deleteUser(result);\n      }\n    });\n  }\n\n  deleteUser(user: any) {\n    const userId = user.id;\n    console.log('User to delete:', user);\n\n    this.userService.deleteUser(userId).subscribe(\n      (response: any) => {\n        this.userList();\n        if (HttpStatusCode.Ok) {\n          this.toastrService.show(response[\"message\"], \"Success\", {\n            status: \"success\",\n            duration: 8000,\n          });\n        } else {\n          this.toastrService.show(response[\"message\"], \"Warning\", {\n            status: \"warning\",\n            duration: 8000,\n          });\n        }\n      })\n  }\n\n  /**\n   * Block/UnBlock Company confirmation\n   * @param userId, userName, status\n   * @returns\n   */\n  confirmBlockUnBlock(user: any, status: string) {\n    this.dialogConfirmService.confirm({\n      header: status + \" - \" + \"confirmation\",\n      icon: 'alert-triangle-outline',\n      message:\n        \"Are you sure that you want to <b>\" +\n        status +\n        \" - \" +\n        user.name +\n        \"</b>  ?\",\n      accept: () => {\n        this.blockUnBlockUser(user, status);\n      },\n    });\n  }\n\n  /**\n   * Block/UnBlock Company\n   * @param userId, status\n   * @returns\n   */\n  blockUnBlockUser(user: any, status: string) {\n    // let blockUnBlockPostData = {\n    //   block: status == \"Block\" ? true : false,\n    // };\n    // Get the current date and time in the desired format\n    const modifiedDate = this.datePipe.transform(new Date(), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n\n    const BlockUnblocK = {\n      mobile: user.mobile,\n      status: status === \"Block\" ? \"Inactive\" : \"Active\",\n      modifiedby: \"Admin\",\n      modifiedon: modifiedDate\n    }\n    this.userService.blockUnBlockUser(BlockUnblocK).subscribe(\n      (response) => {\n        this.userList();\n        if (HttpStatusCode.Ok) {\n          this.toastrService.show(response[\"message\"], \"Success\", {\n            status: \"success\",\n            duration: 8000,\n          });\n        } else {\n          this.toastrService.show(response[\"message\"], \"Warning\", {\n            status: \"warning\",\n            duration: 8000,\n          });\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  /**\n   * Company List\n   * @param null\n   * @returns\n   */\n\n  // Define your static user data\n  // staticUsers: any[] = [\n  //   { username: 'Nanda Kumar', phone_number: '9674662433', decsignation: 'Driver', address: 'Pollachi', active: true },\n  //   { username: 'Karuppu Swamy', phone_number: '7536462774', decsignation: 'Driver', address: 'pollachi', active: false },\n  //   { username: 'Sudarsan', phone_number: '7536462774', decsignation: 'Driver', address: 'coimbatore', active: true },\n  // ];\n\n  userList() {\n\n    //this.users  =this.staticUsers;\n    this.userService.getUserList().subscribe(\n      (response) => {\n        this.users = response;\n        this.users = response;\n        // if (HttpStatusCode.Ok) {\n        //   this.toastrService.show(response[\"message\"], \"Success\", {\n        //     status: \"success\",\n        //     duration: 8000,\n        //   });\n        // } else {\n        //   this.toastrService.show(response[\"message\"], \"Warning\", {\n        //     status: \"warning\",\n        //     duration: 8000,\n        //   });\n        // }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n\n}\n","<nb-card class=\"inline-form-card full-card\">\r\n\r\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\r\n    <nb-card-header>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 text-center bold-text\">Users List</div>\r\n        </div>\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n\r\n        <div class=\"card\">\r\n            <p-table [value]=\"users\" [resizableColumns]=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\"\r\n                [paginator]=\"true\" [rows]=\"rows\" [showCurrentPageReport]=\"true\" [autoLayout]=\"true\"\r\n                [rowsPerPageOptions]=\"itemsPerPage\">\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <ng-container *ngFor=\"let col of columns\">\r\n                            <th *ngIf=\"col.show\" pResizableColumn [pSortableColumn]=\"(col.sort==true)? col.field:false\"\r\n                                [class]=\"col.field+'-campaigns'\" class=\"text-center\">\r\n                                <p-sortIcon *ngIf=\"col.sort==true\" [field]=\"col.field\" class=\"sort-icon\"\r\n                                    [id]=\"col.field+'-sort'\">\r\n                                </p-sortIcon>\r\n                                <span>{{col.header}}</span>\r\n                            </th>\r\n                        </ng-container>\r\n                        <th class=\"text-center\">Actions</th>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-user>\r\n                    <tr>\r\n                        <td nbTooltip=\"{{ user.name }}\" nbTooltipPlacement=\"top\">{{user.name}}</td>\r\n                        <td nbTooltip=\"{{ user.mobile }}\" nbTooltipPlacement=\"top\">{{user.mobile}}</td>\r\n                        <td nbTooltip=\"{{ user.email }}\" nbTooltipPlacement=\"top\">{{user.email}}</td>\r\n                        <td nbTooltip=\"{{ user.address }}\" nbTooltipPlacement=\"top\">{{user.address}}</td>\r\n                        <td>{{user.status}}</td>\r\n                        <td class=\"text-center action\">\r\n                            <button (click)=\"editUser(user)\" routerLinkActive=\"router-link-active\" nbTooltip=\"Edit\"\r\n                                nbTooltipPlacement=\"top\" class=\"btn btn-outline-primary btn-sm action-button\">\r\n                                <nb-icon icon=\"edit\" pack=\"eva\" class=\"action-icons\"></nb-icon>\r\n                            </button>&nbsp;\r\n                            <button nbTooltip=\"Delete\" (click)=\"confirmDelete(user)\" nbTooltipPlacement=\"top\"\r\n                                class=\"btn btn-outline-danger btn-sm action-button\">\r\n                                <nb-icon icon=\"close-circle-outline\" pack=\"eva\" class=\"action-icons\"></nb-icon>\r\n                            </button>&nbsp;\r\n                            <button [nbTooltip]=\"user.status == 'Active' ? 'Block' : 'Unblock'\"\r\n                                (click)=\"confirmBlockUnBlock(user, user.status == 'Active' ? 'Block' : 'UnBlock' )\"\r\n                                nbTooltipPlacement=\"top\"\r\n                                [ngClass]=\"user.status =='Active' ? 'btn btn-outline-danger btn-sm action-button':'btn btn-outline-success btn-sm action-button'\">\r\n                                <nb-icon [icon]=\"user.status =='Active' ? 'lock-outline':'unlock-outline'\" pack=\"eva\"\r\n                                    class=\"action-icons\"></nb-icon>\r\n                            </button>&nbsp;\r\n\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserAddEditComponent } from './user-add-edit/user-add-edit.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'list',\n    component: UserListComponent,\n  },\n  {\n    path: 'edit',\n    component: UserAddEditComponent,\n  },\n  {\n    path: 'edit/:id',\n    component: UserAddEditComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'list', // Default route\n    component: UserListComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { NbMenuModule } from '@nebular/theme';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  NbActionsModule,\r\n  NbAlertModule,\r\n  NbCalendarKitModule,\r\n  NbCalendarModule,\r\n  NbCalendarRangeModule,\r\n  NbFormFieldModule,\r\n  NbProgressBarModule,\r\n  NbSpinnerModule,\r\n  NbTooltipModule,\r\n  NbCheckboxModule,\r\n  NbButtonModule,\r\n  NbAccordionModule,\r\n  NbCardModule,\r\n  NbDialogModule,\r\n  NbListModule,\r\n  NbRouteTabsetModule,\r\n  NbStepperModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbIconModule,\r\n  NbInputModule,\r\n  NbTreeGridModule,\r\n  NbSelectModule,\r\n  NbToggleModule, \r\n  NbContextMenuModule,\r\n} from '@nebular/theme';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\n\r\n// Interceptor\r\nimport { NbAuthJWTInterceptor, HttpErrorInterceptor } from '../../auth/interceptor/jwt-interceptor';\r\n\r\n// Primeng\r\nimport { TableModule } from 'primeng/table';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserAddEditComponent } from './user-add-edit/user-add-edit.component';\r\nimport { DialogDeleteComponent } from './user-list/dialog-delete.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserListComponent, UserAddEditComponent, DialogDeleteComponent, ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    NbActionsModule,\r\n    NbAlertModule,\r\n    NbCalendarKitModule,\r\n    NbCalendarModule,\r\n    NbCalendarRangeModule,\r\n    NbFormFieldModule,\r\n    NbProgressBarModule,\r\n    NbSpinnerModule,\r\n    NbTooltipModule,\r\n    NbCheckboxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ThemeModule,\r\n    NbTabsetModule,\r\n    NbRouteTabsetModule,\r\n    NbStepperModule,\r\n    NbCardModule,\r\n    NbButtonModule,\r\n    NbListModule,\r\n    NbAccordionModule,\r\n    NbUserModule,\r\n    UsersRoutingModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    NbTreeGridModule,\r\n    NbSelectModule,\r\n    NbToggleModule,\r\n    NbContextMenuModule,\r\n    NbDialogModule.forRoot(),\r\n    TableModule,\r\n    ButtonModule,\r\n    ConfirmDialogModule,\r\n    DialogModule,\r\n  ],\r\n  providers: [\r\n    ConfirmationService, \r\n    { provide: HTTP_INTERCEPTORS, useClass: NbAuthJWTInterceptor, multi: true }, \r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\r\n  ],\r\n})\r\nexport class UsersModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}